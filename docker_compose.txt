version: '3.8'

services:
  # Основное приложение ArbitrageBot (без баз данных)
  arbitrage-bot:
    build: .
    container_name: arbitrage-bot
    restart: unless-stopped
    environment:
      # Telegram настройки (ОБЯЗАТЕЛЬНО)
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      
      # Настройки арбитража
      - PRICE_THRESHOLD=${PRICE_THRESHOLD:-10.0}
      - MIN_VOLUME=${MIN_VOLUME:-50000}
      - UPDATE_INTERVAL=${UPDATE_INTERVAL:-60}
      - MAX_ALERTS=${MAX_ALERTS:-5}
      - ALERT_COOLDOWN=${ALERT_COOLDOWN:-30}
      
      # API ключи бирж (опционально для лучших лимитов)
      - BINANCE_API_KEY=${BINANCE_API_KEY:-}
      - BINANCE_SECRET=${BINANCE_SECRET:-}
      - OKX_API_KEY=${OKX_API_KEY:-}
      - OKX_SECRET=${OKX_SECRET:-}
      - OKX_PASSPHRASE=${OKX_PASSPHRASE:-}
      - BYBIT_API_KEY=${BYBIT_API_KEY:-}
      - BYBIT_SECRET=${BYBIT_SECRET:-}
      - KUCOIN_API_KEY=${KUCOIN_API_KEY:-}
      - KUCOIN_SECRET=${KUCOIN_SECRET:-}
      - KUCOIN_PASSPHRASE=${KUCOIN_PASSPHRASE:-}
      - GATEIO_API_KEY=${GATEIO_API_KEY:-}
      - GATEIO_SECRET=${GATEIO_SECRET:-}
      - MEXC_API_KEY=${MEXC_API_KEY:-}
      - MEXC_SECRET=${MEXC_SECRET:-}
      - HTX_API_KEY=${HTX_API_KEY:-}
      - HTX_SECRET=${HTX_SECRET:-}
      - BITGET_API_KEY=${BITGET_API_KEY:-}
      - BITGET_SECRET=${BITGET_SECRET:-}
      - BITGET_PASSPHRASE=${BITGET_PASSPHRASE:-}
      
      # Логирование
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE=arbitrage.log
      
    volumes:
      - ./logs:/app/logs
      - /etc/localtime:/etc/localtime:ro  # Синхронизация времени
    networks:
      - arbitrage-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    
    # Health check для мониторинга
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Watchtower для автообновлений (опционально)
  watchtower:
    image: containrrr/watchtower
    container_name: arbitrage-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=3600  # Проверка каждый час
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
    command: arbitrage-bot  # Мониторим только наш контейнер
    networks:
      - arbitrage-network

networks:
  arbitrage-network:
    driver: bridge